{"version":3,"sources":["../node_modules/prop-types/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/unified/node_modules/is-buffer/index.js","../node_modules/extend/index.js","../node_modules/vfile/node_modules/is-buffer/index.js","../node_modules/style-to-object/index.js","../node_modules/inline-style-parser/index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js","../node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/react-markdown/node_modules/remark-rehype/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/micromark-util-chunked/index.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/unist-util-is/index.js","../node_modules/mdurl/encode.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/character-entities/index.js","../node_modules/decode-named-character-reference/index.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js"],"names":["module","exports","require","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","obj","constructor","isBuffer","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","key","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","options","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","parse","style","iterator","declaration","output","property","declarations","hasIterator","len","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","Position","whitespace","this","end","source","content","errorsList","error","msg","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","prop","val","ret","decl","decls","_classCallCheck","instance","Constructor","_defineProperties","descriptor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_typeof","Symbol","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","apply","Parent","args","Class","a","Function","bind","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","own","stringifyPosition","point","index","VFileMessage","place","origin","parts","message","stack","ruleId","file","fatal","url","note","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","includes","protoProps","staticProps","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","all","children","tokenize","effects","previous","contentStart","attempt","parser","constructs","contentInitial","consume","enter","exit","factorySpace","lineStart","token","contentType","markdownLineEnding","document","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","splice","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","size","ok","nok","disable","null","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","unshift","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","partial","initial","blankLine","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","list","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","from","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","fromCharCode","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","markdownSpace","initialSize","kind","asciiDigit","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","max","limit","balance","destinationEnclosedBefore","asciiControl","destinationRaw","destinationEnclosed","destinationEnclosedEscape","markdownLineEndingOrSpace","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","definition","identifier","labelAfter","normalizeIdentifier","titleConstruct","defined","before","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","asciiAlpha","tagName","commentOpenInside","cdataOpenInside","toLowerCase","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","asciiAlphanumeric","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","characterReference","test","numeric","asciiHexDigit","decodeNamedCharacterReference","characterEscape","asciiPunctuation","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","attention","attentionMarkers","classifyCharacter","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","asciiAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","d","and","errorHandler","onExitError","parseInt","lang","depth","parent","referenceType","ancestor","decodeString","fragment","decodeNumericCharacterReference","ordered","spread","checked","compiler","postprocess","combineExtensions","defaultConstructs","concat","extensions","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","extension","left","right","remarkParse","u","pointStart","pointEnd","visitParents","visitor","reverse","is","convert","step","factory","parents","visit","subresult","grandparents","toResult","definitions","cache","id","clean","toUpperCase","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","head","loose","items","properties","className","footnoteReference","footnoteOrder","role","revert","subtype","suffix","contents","listItemLoose","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","root","table","rows","align","row","out","cell","toml","ignore","yaml","footnoteDefinition","toHast","allowDangerousHtml","hName","hProperties","hChildren","ctx","foot","listItems","backReference","footer","remarkRehype","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","remove","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","$0","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","Fragment","ReactIs","isValidElementType","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","Type","rest","dashes","find","padRight","padLeft","commas","v","styleReplacer","parseStyle","$1","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","regexCheck","unicodeWhitespace","unicodePunctuation","regex","_toConsumableArray","arrayLikeToArray","chunkStart","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","_defineProperty","castFactory","typeFactory","anyFactory","propsFactory","tests","encodeCache","encode","exclude","keepEscaped","l","nextCode","defaultChars","ch","getEncodeCache","encodeURIComponent","componentChars","characterEntities","AEli","AElig","AM","AMP","Aacut","Aacute","Abreve","Acir","Acirc","Acy","Afr","Agrav","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Arin","Aring","Ascr","Assign","Atild","Atilde","Aum","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COP","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedi","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ET","ETH","Eacut","Eacute","Ecaron","Ecir","Ecirc","Ecy","Edot","Efr","Egrav","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Eum","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","G","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacut","Iacute","Icir","Icirc","Icy","Idot","Ifr","Igrav","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Ium","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","L","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntild","Ntilde","Nu","OElig","Oacut","Oacute","Ocir","Ocirc","Ocy","Odblac","Ofr","Ograv","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslas","Oslash","Otild","Otilde","Otimes","Oum","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUO","QUOT","Qfr","Qopf","Qscr","RBarr","RE","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THOR","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacut","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucir","Ucirc","Ucy","Udblac","Ufr","Ugrav","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uum","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacut","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacut","aacute","abreve","ac","acE","acd","acir","acirc","acut","acute","acy","aeli","aelig","af","afr","agrav","agrave","alefsym","aleph","alpha","amacr","amalg","am","amp","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","arin","aring","ascr","ast","asymp","asympeq","atild","atilde","aum","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvba","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedi","ccedil","ccirc","ccups","ccupssm","cdot","cedi","cedil","cemptyv","cen","cent","centerdot","cfr","chcy","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","cop","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curre","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","de","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divid","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacut","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrav","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","et","eth","eum","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac1","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac3","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","g","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacut","iacute","ic","icir","icirc","icy","iecy","iexc","iexcl","iff","ifr","igrav","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","imagline","imagpart","imath","imof","imped","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iques","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","ium","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","langd","langle","lap","laqu","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","mac","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","mdash","measuredangle","mfr","mho","micr","micro","mid","midast","midcir","middo","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbs","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntild","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacut","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograv","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslas","oslash","osol","otild","otilde","otimes","otimesas","oum","ouml","ovbar","par","para","parallel","parsim","parsl","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusm","plusmn","plussim","plustwo","pm","pointint","popf","poun","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quo","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raqu","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sec","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","sh","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup","sup1","sup2","sup3","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szli","szlig","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thor","thorn","tilde","time","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacut","uacute","uarr","ubrcy","ubreve","ucir","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrav","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","um","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uum","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacut","yacute","yacy","ycirc","ycy","ye","yen","yfr","yicy","yopf","yscr","yucy","yum","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","_iterableToArray","iter","syntaxExtension","hook","existing","combineHtmlExtensions","htmlExtensions","htmlExtension","characterEscapeOrReference","decode","$2","hex"],"mappings":"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","file":"static/js/1.b290ae4c.chunk.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","var own = {}.hasOwnProperty\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|Position|Point} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    // @ts-ignore looks like a node.\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    // @ts-ignore looks like a position.\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    // @ts-ignore looks like a point.\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string?, string?]} */\n    var parts = [null, null]\n    /** @type {Position} */\n    var position = {\n      start: {line: null, column: null},\n      end: {line: null, column: null}\n    }\n    /** @type {number} */\n    var index\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = null\n    }\n\n    if (typeof origin === 'string') {\n      index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-ignore Looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // @ts-ignore Looks like a point.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    this.fatal\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array.<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\nexport {isUrl}\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('..').VFileData} VFileData\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {string|Uint8Array} VFileValue\n *   Contents of the file.\n *   Can either be text, or a Buffer like structure.\n *   This does not directly use type `Buffer`, because it can also be used in a\n *   browser context.\n *   Instead this leverages `Uint8Array` which is the base type for `Buffer`,\n *   and a native JavaScript construct.\n *\n * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array.<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {VFileData} [data]\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Object.<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: VFile[], options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    /** @type {VFileOptions} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It’s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {VFileData}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array.<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array.<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `RawSourceMap` type from the `source-map` module.\n     * @type {unknown}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   *\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    // @ts-expect-error string’s don’t accept the parameter, but buffers do.\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: any[]) => void} Callback\n * @typedef {(...input: any[]) => any} Middleware\n *\n * @typedef {(...input: any[]) => void} Run Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Middleware[]} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {any[]} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @param {any[]} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware(...parameters)\n    } catch (error) {\n      /** @type {Error} */\n      const exception = error\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[1] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n *\n * Note that `textarea` is not available in `CommonMark@0.29` but has been\n * merged to the primary branch and is slated to be released in the next release\n * of CommonMark.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('unist-util-visit').Visitor<Definition>} DefinitionVisitor\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Object.<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', ondefinition)\n\n  return getDefinition\n\n  /** @type {DefinitionVisitor} */\n  function ondefinition(definition) {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  /**\n   * Get a node from the bound definition-cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function getDefinition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array.<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array.<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array.<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array.<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const footnoteOrder = h.footnoteOrder\n  const identifier = String(node.identifier)\n  const index = footnoteOrder.indexOf(identifier)\n  const marker = String(\n    index === -1 ? footnoteOrder.push(identifier) : index + 1\n  )\n\n  return h(\n    node,\n    'a',\n    {\n      href: '#fn' + marker,\n      className: ['footnote-ref'],\n      id: 'fnref' + marker,\n      role: 'doc-noteref'\n    },\n    [h(node.position, 'sup', [u('text', marker)])]\n  )\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array.<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array.<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array.<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    let pos = node.align ? align.length : row.length\n    /** @type {Array.<Content>} */\n    const out = []\n\n    while (pos--) {\n      const cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array.<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Object.<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array.<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Object.<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array.<string>} footnoteOrder Order in which footnotes occur\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array.<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false] Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {Handlers} [handlers] Object mapping mdast nodes to functions handling them\n * @property {Array.<string>} [passThrough] List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler] Handler for all unknown nodes.\n *\n * @typedef {Record.<string, Handler>} Handlers Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Object.<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array.<string>} */\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {JSX.IntrinsicElements['code'] & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {JSX.IntrinsicElements['h1'] & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {JSX.IntrinsicElements['li'] & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {JSX.IntrinsicElements['ol'] & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {JSX.IntrinsicElements['table'] & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {JSX.IntrinsicElements['tr'] & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {JSX.IntrinsicElements['ul'] & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [plugins=[]] **deprecated**: use `remarkPlugins` instead\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    // TODO: deprecate `plugins` in v8.0.0.\n    .use(options.remarkPlugins || options.plugins || [])\n    .use(remarkRehype, {allowDangerousHtml: true})\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AEli: 'Æ',\n  AElig: 'Æ',\n  AM: '&',\n  AMP: '&',\n  Aacut: 'Á',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acir: 'Â',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrav: 'À',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Arin: 'Å',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atild: 'Ã',\n  Atilde: 'Ã',\n  Aum: 'Ä',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COP: '©',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedi: 'Ç',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ET: 'Ð',\n  ETH: 'Ð',\n  Eacut: 'É',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecir: 'Ê',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrav: 'È',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Eum: 'Ë',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  G: '>',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacut: 'Í',\n  Iacute: 'Í',\n  Icir: 'Î',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrav: 'Ì',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Ium: 'Ï',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  L: '<',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntild: 'Ñ',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacut: 'Ó',\n  Oacute: 'Ó',\n  Ocir: 'Ô',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograv: 'Ò',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslas: 'Ø',\n  Oslash: 'Ø',\n  Otild: 'Õ',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Oum: 'Ö',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUO: '\"',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  RE: '®',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THOR: 'Þ',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacut: 'Ú',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucir: 'Û',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrav: 'Ù',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uum: 'Ü',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacut: 'Ý',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacut: 'á',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acir: 'â',\n  acirc: 'â',\n  acut: '´',\n  acute: '´',\n  acy: 'а',\n  aeli: 'æ',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrav: 'à',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  am: '&',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  arin: 'å',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atild: 'ã',\n  atilde: 'ã',\n  aum: 'ä',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvba: '¦',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedi: 'ç',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedi: '¸',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cen: '¢',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  cop: '©',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curre: '¤',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  de: '°',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divid: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacut: 'é',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: 'ê',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrav: 'è',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  et: 'ð',\n  eth: 'ð',\n  eum: 'ë',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac1: '¼',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac3: '¾',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  g: '>',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacut: 'í',\n  iacute: 'í',\n  ic: '⁣',\n  icir: 'î',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexc: '¡',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrav: 'ì',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iques: '¿',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  ium: 'ï',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laqu: '«',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  l: '<',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  mac: '¯',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micr: 'µ',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middo: '·',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbs: ' ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  no: '¬',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntild: 'ñ',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacut: 'ó',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: 'ô',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograv: 'ò',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: 'º',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslas: 'ø',\n  oslash: 'ø',\n  osol: '⊘',\n  otild: 'õ',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  oum: 'ö',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '¶',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusm: '±',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  poun: '£',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quo: '\"',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raqu: '»',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  re: '®',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sec: '§',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  sh: '­',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup: '⊃',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szli: 'ß',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thor: 'þ',\n  thorn: 'þ',\n  tilde: '˜',\n  time: '×',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacut: 'ú',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucir: 'û',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrav: 'ù',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  um: '¨',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uum: 'ü',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacut: 'ý',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  ye: '¥',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yum: 'ÿ',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n"],"sourceRoot":""}