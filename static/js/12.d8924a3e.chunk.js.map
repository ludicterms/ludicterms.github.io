{"version":3,"sources":["pages/About.js","contentful.js","components/UI/Section/Section.js","components/UI/Section/Section.module.css","hooks/useGeneralContent.js"],"names":["StyledMarkdown","styled","Markdown","About","useGeneralContent","generalContent","isLoading","React","useEffect","window","scrollTo","className","children","fields","about","client","require","createClient","space","process","accessToken","getArticles","getEntries","content_type","then","response","items","sort","a","b","mainTitle","getSingleArticle","slug","getGeneralContent","Section","props","styles","section","module","exports","promise","useState","setGeneralContent","setLoading","catch","err","alert"],"mappings":"uNAMMA,EAAiBC,YAAOC,IAAPD,CAAH,4JA+BLE,UApBD,WACZ,MAAoCC,cAApC,mBAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAGD,eAAC,IAAD,WACE,qBAAKC,UAAU,YAAf,SACE,gEAEAL,GACA,cAACN,EAAD,CAAgBY,SAAUP,EAAe,GAAGQ,OAAOC,QAEpDR,GAAa,gD,gCChCpB,0GAAMS,EAASC,EAAQ,IAAcC,aAAa,CAChDC,MAAOC,eACPC,YAAaD,gDAGTE,EAAc,kBAClBN,EAAOO,WAAW,CAAEC,aAAc,gBAAiBC,MAAK,SAACC,GAAD,OAEtDA,EAASC,MAAMC,MAAK,SAACC,EAAGC,GACtB,OAAID,EAAEf,OAAOiB,UAAYD,EAAEhB,OAAOiB,WACxB,EAENF,EAAEf,OAAOiB,UAAYD,EAAEhB,OAAOiB,UACzB,EAEF,SAIPC,EAAmB,SAACC,GAAD,OACvBjB,EACGO,WAAW,CACV,cAAeU,EACfT,aAAc,gBAEfC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAE3BO,EAAoB,kBACxBlB,EACGO,WAAW,CAAEC,aAAc,mBAC3BC,MAAK,SAACC,GAAD,OAAcA,EAASC,W,gCC9BjC,4BAMeQ,IAJC,SAACC,GACf,OAAO,yBAASxB,UAAWyB,IAAOC,QAA3B,SAAqCF,EAAMvB,a,mBCFpD0B,EAAOC,QAAU,CAAC,QAAU,2B,4FCGtBC,EAAUP,cAEH7B,EAAoB,WAC/B,MAA4CqC,mBAAS,IAArD,mBAAOpC,EAAP,KAAuBqC,EAAvB,KACA,EAAgCD,oBAAS,GAAzC,mBAAOnC,EAAP,KAAkBqC,EAAlB,KAaA,OAXAnC,qBAAU,WACRgC,EACGhB,MAAK,SAACnB,GACLqC,EAAkBrC,GAClBsC,GAAW,MAEZC,OAAM,SAACC,GACNC,MAAMD,QAET,IAEI,CAACxC,EAAgBC,K","file":"static/js/12.d8924a3e.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Markdown from \"react-markdown\";\nimport Section from \"../components/UI/Section/Section\";\nimport { useGeneralContent } from \"../hooks/useGeneralContent\";\n\nconst StyledMarkdown = styled(Markdown)`\n  && {\n    li {\n      margin: 16px 0;\n      &::marker {\n        content: \"(\" counter(list-item) \") \";\n      }\n    }\n  }\n`;\n\nconst About = () => {\n  const [generalContent, isLoading] = useGeneralContent();\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, []);\n  \n  return (\n    <Section>\n      <div className=\"pageTitle\">\n        <h1>Encyclopedia of Ludic Terms</h1>\n      </div>\n      {!isLoading && (\n        <StyledMarkdown children={generalContent[0].fields.about} />\n      )}\n      {isLoading && <p>Loading...</p>}\n    </Section>\n  );\n};\n\nexport default About;\n","const client = require(\"contentful\").createClient({\n  space: process.env.REACT_APP_CONTENFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n});\n\nconst getArticles = () =>\n  client.getEntries({ content_type: \"gameArticle\" }).then((response) =>\n    //sort the items in alphabatical order\n    response.items.sort((a, b) => {\n      if (a.fields.mainTitle < b.fields.mainTitle) {\n        return -1;\n      }\n      if (a.fields.mainTitle > b.fields.mainTitle) {\n        return 1;\n      }\n      return 0;\n    })\n  );\n\nconst getSingleArticle = (slug) =>\n  client\n    .getEntries({\n      \"fields.slug\": slug,\n      content_type: \"gameArticle\",\n    })\n    .then((response) => response.items);\n\nconst getGeneralContent = () =>\n  client\n    .getEntries({ content_type: \"generalContent\" })\n    .then((response) => response.items);\n\nexport { getArticles, getSingleArticle, getGeneralContent };\n","import styles from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={styles.section}>{props.children}</section>;\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3vam2\"};","import { useEffect, useState } from \"react\";\n\nimport { getGeneralContent } from \"../contentful\";\n\nconst promise = getGeneralContent();\n\nexport const useGeneralContent = () => {\n  const [generalContent, setGeneralContent] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    promise\n      .then((generalContent) => {\n        setGeneralContent(generalContent);\n        setLoading(false);\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  }, []);\n\n  return [generalContent, isLoading];\n};\n"],"sourceRoot":""}